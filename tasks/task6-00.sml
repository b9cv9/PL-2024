fun f6 (xs, k) =
    let
        fun helper ([], _) _ = []
          | helper (x::xs, k) n =
              if n mod k = 0 then helper (xs, k) (n + 1)
              else x :: helper (xs, k) (n + 1)
    in
        helper (xs, k) 1
    end

val test1 = f6 ([3.0, 1.0, 3.0, 2.0, 3.0, 5.0, 4.0, 4.0, 7.0], 3)




(* 11. Функция должна получать список вещественных чисел и целое положительное число k. Функция должна
возвращать список, полученный из заданного удалением каждого k-ого элемента.
Например, f4 ([3.0, 1.0, 3.0, 2.0, 3.0, 5.0, 4.0, 4.0, 7.0], 3) = [3.0, 1.0, 2.0, 3.0, 4.0, 4.0].
Сигнатура итоговой функции: real list * int -> real list . *)

(* 0 (Текст задачи из задания 4). Функция должна получать список целых чисел, и возвращать список, полученный
из исходного удалением подряд идущих дубликатов элементов.
Например, f4 [1, 2, 2, 2, 3, 3, 4, 5] = [1, 2, 3, 4, 5].
Сигнатура итоговой функции: int list -> int list . *)